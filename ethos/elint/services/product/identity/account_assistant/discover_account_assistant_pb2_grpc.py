# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethos.elint.entities import account_assistant_pb2 as ethos_dot_elint_dot_entities_dot_account__assistant__pb2
from ethos.elint.entities import account_pb2 as ethos_dot_elint_dot_entities_dot_account__pb2


class DiscoverAccountAssistantServiceStub(object):
    """Service Definitions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccountAssistantByAccount = channel.unary_unary(
                '/elint.services.product.identity.account.assistant.DiscoverAccountAssistantService/GetAccountAssistantByAccount',
                request_serializer=ethos_dot_elint_dot_entities_dot_account__pb2.Account.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_entities_dot_account__assistant__pb2.AccountAssistant.FromString,
                )


class DiscoverAccountAssistantServiceServicer(object):
    """Service Definitions
    """

    def GetAccountAssistantByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscoverAccountAssistantServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccountAssistantByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountAssistantByAccount,
                    request_deserializer=ethos_dot_elint_dot_entities_dot_account__pb2.Account.FromString,
                    response_serializer=ethos_dot_elint_dot_entities_dot_account__assistant__pb2.AccountAssistant.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.services.product.identity.account.assistant.DiscoverAccountAssistantService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DiscoverAccountAssistantService(object):
    """Service Definitions
    """

    @staticmethod
    def GetAccountAssistantByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.identity.account.assistant.DiscoverAccountAssistantService/GetAccountAssistantByAccount',
            ethos_dot_elint_dot_entities_dot_account__pb2.Account.SerializeToString,
            ethos_dot_elint_dot_entities_dot_account__assistant__pb2.AccountAssistant.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
