# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethos.elint.entities import generic_pb2 as ethos_dot_elint_dot_entities_dot_generic__pb2
from ethos.elint.services.product.identity.multiverse import access_multiverse_pb2 as ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2


class AccessMultiverseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateCoreCollaborator = channel.unary_unary(
                '/elint.services.product.identity.multiverse.AccessMultiverseService/ValidateCoreCollaborator',
                request_serializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorRequest.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorResponse.FromString,
                )
        self.VerifyCoreCollaborator = channel.unary_unary(
                '/elint.services.product.identity.multiverse.AccessMultiverseService/VerifyCoreCollaborator',
                request_serializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorRequest.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorResponse.FromString,
                )
        self.ValidateMultiverseServices = channel.unary_unary(
                '/elint.services.product.identity.multiverse.AccessMultiverseService/ValidateMultiverseServices',
                request_serializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.MultiverseServicesAccessAuthDetails.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_entities_dot_generic__pb2.ResponseMeta.FromString,
                )


class AccessMultiverseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ValidateCoreCollaborator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCoreCollaborator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateMultiverseServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccessMultiverseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ValidateCoreCollaborator': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateCoreCollaborator,
                    request_deserializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorRequest.FromString,
                    response_serializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorResponse.SerializeToString,
            ),
            'VerifyCoreCollaborator': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCoreCollaborator,
                    request_deserializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorRequest.FromString,
                    response_serializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorResponse.SerializeToString,
            ),
            'ValidateMultiverseServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateMultiverseServices,
                    request_deserializer=ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.MultiverseServicesAccessAuthDetails.FromString,
                    response_serializer=ethos_dot_elint_dot_entities_dot_generic__pb2.ResponseMeta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.services.product.identity.multiverse.AccessMultiverseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccessMultiverseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ValidateCoreCollaborator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.identity.multiverse.AccessMultiverseService/ValidateCoreCollaborator',
            ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorRequest.SerializeToString,
            ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.ValidateCoreCollaboratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyCoreCollaborator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.identity.multiverse.AccessMultiverseService/VerifyCoreCollaborator',
            ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorRequest.SerializeToString,
            ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.VerifyCoreCollaboratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateMultiverseServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.identity.multiverse.AccessMultiverseService/ValidateMultiverseServices',
            ethos_dot_elint_dot_services_dot_product_dot_identity_dot_multiverse_dot_access__multiverse__pb2.MultiverseServicesAccessAuthDetails.SerializeToString,
            ethos_dot_elint_dot_entities_dot_generic__pb2.ResponseMeta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
