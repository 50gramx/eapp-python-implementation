#   /*************************************************************************
#   *
#   * AMIT KUMAR KHETAN CONFIDENTIAL
#   * __________________
#   *
#   *  [2017] - [2021] Amit Kumar Khetan
#   *  All Rights Reserved.
#   *
#   * NOTICE:  All information contained herein is, and remains
#   * the property of Amit Kumar Khetan and its suppliers,
#   * if any.  The intellectual and technical concepts contained
#   * herein are proprietary to Amit Kumar Khetan
#   * and its suppliers and may be covered by U.S. and Foreign Patents,
#   * patents in process, and are protected by trade secret or copyright law.
#   * Dissemination of this information or reproduction of this material
#   * is strictly forbidden unless prior written permission is obtained
#   * from Amit Kumar Khetan.
#   */

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethos.elint.entities import organization_space_pb2 as ethos_dot_elint_dot_entities_dot_organization__space__pb2


class OnboardOrganizationSpaceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.claim_organization_space = channel.unary_unary(
                '/elint.services.product.identity.OnboardOrganizationSpaceService/claim_organization_space',
                request_serializer=ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceRequest.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceResponse.FromString,
                )


class OnboardOrganizationSpaceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def claim_organization_space(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OnboardOrganizationSpaceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'claim_organization_space': grpc.unary_unary_rpc_method_handler(
                    servicer.claim_organization_space,
                    request_deserializer=ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceRequest.FromString,
                    response_serializer=ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.services.product.identity.OnboardOrganizationSpaceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OnboardOrganizationSpaceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def claim_organization_space(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.identity.OnboardOrganizationSpaceService/claim_organization_space',
            ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceRequest.SerializeToString,
            ethos_dot_elint_dot_entities_dot_organization__space__pb2.ClaimOrganizationSpaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
