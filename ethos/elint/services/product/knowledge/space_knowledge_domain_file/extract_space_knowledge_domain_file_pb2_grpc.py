# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethos.elint.services.product.knowledge.space_knowledge_domain_file import extract_space_knowledge_domain_file_pb2 as ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2


class ExtractKnowledgeDomainFileServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConvertFileToImage = channel.unary_unary(
                '/elint.services.product.knowledge.file.ExtractKnowledgeDomainFileService/ConvertFileToImage',
                request_serializer=ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageRequest.SerializeToString,
                response_deserializer=ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageResponse.FromString,
                )


class ExtractKnowledgeDomainFileServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConvertFileToImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExtractKnowledgeDomainFileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConvertFileToImage': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertFileToImage,
                    request_deserializer=ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageRequest.FromString,
                    response_serializer=ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'elint.services.product.knowledge.file.ExtractKnowledgeDomainFileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExtractKnowledgeDomainFileService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConvertFileToImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/elint.services.product.knowledge.file.ExtractKnowledgeDomainFileService/ConvertFileToImage',
            ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageRequest.SerializeToString,
            ethos_dot_elint_dot_services_dot_product_dot_knowledge_dot_space__knowledge__domain__file_dot_extract__space__knowledge__domain__file__pb2.ConvertFileToImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
